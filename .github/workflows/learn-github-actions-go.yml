name: Go CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:
    inputs:
      working-directory:
        default: 'src'
        description: 'Directory to the folder in which the app is located.'
        required: true
        type: string
      
      service-name:
        required: false
        type: string
        default: ${{ github.event.repository.name }}

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.x # Replace with the desired Go version

      - name: Install golangci-lint
        run: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.1 # Replace with the desired golangci-lint version

      - name: Run linter
        run: golangci-lint run  
        working-directory: ${{ inputs.working-directory }}  

  unit-test:
    name: Unit test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.x # Replace with the desired Go version

      - name: Cache dependencies
        id: cacheStep
        uses: actions/cache@v2
        with:
          path: |
            ${{ inputs.working-directory }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
  
      - name: Install dependencies
        if: steps.cacheStep.outputs.cache-hit != 'true'
        working-directory: ${{ inputs.working-directory }}
        run: go mod download
        

      - name: Test
        working-directory: ${{ inputs.working-directory }}
        run: |
          echo ${{ inputs.working-directory }}
          go test -v -cover ./... -json > TestResults-${{ inputs.service-name || github.event.repository.name }}.json
       

      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: Go-results-${{ inputs.service-name || github.event.repository.name }}
          path: TestResults-${{ inputs.service-name || github.event.repository.name }}.json
        

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [ unit-test, lint ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.x # Replace with the desired Go version

      - name: Cache dependencies
        id: cacheStep
        uses: actions/cache@v2
        with:
          path: |
            ${{ inputs.working-directory }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        if: steps.cacheStep.outputs.cache-hit != 'true'
        run: go mod download

      - name: Build application
        run: 
          go build -o ${{ inputs.service-name || github.event.repository.name }}
        working-directory: ${{ inputs.working-directory }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.service-name || github.event.repository.name }}
          path: ${{ inputs.service-name || github.event.repository.name }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ inputs.service-name || github.event.repository.name }}:latest